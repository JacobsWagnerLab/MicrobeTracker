<html>
<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<!-- Start replacement block 1 -->
<title>MicrobeTracker Tools</title>
</head>

<body link="#000000" vlink="#808080" alink="#808080">

<p><b><font face="Courier">
<!-- End replacement block 1 -->
dispcellall
<!-- Start replacement block 2 -->
</font></b></p>
<!-- End replacement block 2 -->

<p>Syntax:</p>
<p><font face="Courier">dispcellall(cellList,images)</font></p>
<p><font face="Courier">dispcellall(cellList,images,framelist)</font></p>
<p><font face="Courier">dispcellall(cellList,images,...,spotfieldname)</font></p>
<p><font face="Courier">dispcellall(cellList,images,...,spotfieldname1,spotfieldname2,spotfieldname3)</font></p>
<p><font face="Courier">dispcellall(cellList,images,...,signalfieldname)</font></p>
<p><font face="Courier">dispcellall(cellList,images,...,'numbers')</font></p>
<p><font face="Courier">dispcellall(cellList,images,...,'disk')</font></p>
<p><font face="Courier">dispcellall(cellList,images,...,'circle')</font></p>

<p>This function displays a microscope image with the cells detected on this
image and spots inside (if present). The cells and the spots to be displayed 
can be filtered using several criteria.</p>

<ul>
  <li>
  &lt;cellList&gt; - an array that contains the meshes and spots. This
  function can use either a cellList array generated by the
  <a href="helpSpotFinder.htm">SpotFinderZ</a>,
  <a href="helpSpotFinderM.htm">SpotFinderM</a> and
  <a href="helppeakfinder.htm">peakfinder</a> functions, or a spotList array
  generated by the <a href="helpSpotFinderF.htm">SpotFinderF</a> function. You
  can drag-and-drop the file with the data into MATLAB workspace or open it
  using the MATLAB Import Tool.</li>
  <li>
  &lt;images&gt; - a 3D array of images. It can be obtained using
  <a href="helploadimageseries.htm"> loadimageseries</a> and
  <a href="helploadimagestack.htm"> loadimagestack</a> commands, e.g.:
  <font face="Courier">images=loadimageseries('c:\users\test\imagefiles',1);</font>.
  To not display images (and show black backgroung instead), use an empty array,
  [].</li>
  <li>
  &lt;framelist&gt; - list of frames to display, i.e. [1 3 4 10] to display
  frames 1, 3, 4, and 10. Default: all frames.</li>
  <li>
  &lt;spotfieldname&gt;, &lt;spotfieldname1&gt;, ... - names of the fields
  containing spots, must start with 'spots', e.g. 'spots', 'spots1', 'spots2',
  etc. Several fields can be listed. Only the first one is used for filtering
  cells. Default: 'spots'. To not display spots, use a non-existent field name,
  e.g. 'spotsx'.</li>
  <li>
  &lt;signalfieldname&gt; - name of the field containing signal (for
  filtering). It must start with 'signal', e.g. 'signal1', 'signal2', etc.
  Default: 'signal1'.</li>
  <li>
  'numbers' - use this option to display the numbers inside cells.</li>
  <li>
  'disk' - display spots as filled disks rather than dots. The radius in this
  case is measured in image pixels, not screen points.</li>
  <li>
  'circle' - display spots as circles rather than dots. The radius in this
  case is measured in image pixels, not screen points.</li>
</ul>

<p>The rest of the parameters must be submitted in the format
&lt;parametername&gt;,&lt;parametervalue&gt;, where &lt;parametername&gt; must
be in quotes and &lt;parametervalue&gt; must be the value of this parameter. For
example: dispcellall(cellList,images,cell,'markersize',2). Here are the possible
parameters:</p>

<ul>
  <li>'markersize' - spots marker size, 0 - don't show, default automatic.</li>
  <li>'imagelimits' - image scaling limits, default max to min.</li>
  <li>'colortable' - nx3 table of the marker disk colors. The table is an
    n-by-3 or n+1-by-3 matrix, where n if the number of fields. Each row
    corresponds to the color of the field, in the RGB (red, green, blue)
    format, the optional extra row corresponds to the color of 
    overlapping regions.</li>
</ul>

<p>Filtering parameters: only cells/spots satisfying them will be displayed. If
no spot exists in the cell or should be displayed and any of the spot filters is
used, the cell will only be displayed if 'nspots' parameter is present and
contains zero.</p>

<ul>
  <li>'cellintensity' - array of two numbers: low and high limits of the total 
    intensity in the cell (as written in the mesh - either 
    &lt;spotfieldname&gt field or, if not provided, 'signal1' field)</li>
  <li>'cellmeanintensity' - mean intensity in the cell</li>
  <li>'celllength' - low and high limits of the cell length (in pixels)</li>
  <li>'cellarea' - low and high limits of the cell area (in pixels squared)</li>
  <li>'cellvolume' - low and high limits of the cell volume (in pixels cubic)</li>
  <li>'cellmeanwidth' - low and high limits of the mean (along the length)
    width of the cell</li>
  <li>'cellmaxwidth' - low and high limits of the maximum width of the cell</li>
  <li>'cellcurvature' - low and high limits of the cell curvature (in 1/pixel)</li>
  <li>'nspots' - list of possible numbers of spots (e.g. 0:3 for up to 3 spots)</li>
  <li>'spotmagnitude' - low and high limits of the spot magnitude</li>
  <li>'spotheight' - low and high limits of the spot height (intensity units)</li>
  <li>'spotwidth' - low and high limits of the spot width (in pixels)</li>
  <li>'spotposition' - low and high limits of the spot position from the "old"
    pole of the cell. This parameter allows more than 2 limits, in which
    case the spot will be displayed if it is either between 1st and 2nd,
    or 3rd and 4th, etc.</li>
  <li>'spotrelposition' - low and high limits of the relative (between 0 and 1)
    spot position, measured from the "lod" pole. This parameter also
    allows more than two limits.</li>
</ul>

<p><a name="example1"></a><b><font size="4">Example</font></b><p>

<p>This example demonstrates how to use some of the display options of the
dispspotall command. It uses images of <i>C. crescentus</i> CB15N cells expressing
CFP-ParB and PopZ-YFP chimeric proteins (courtesy of Dr. Geraldine Laloux).<p>

<p>1. Start MATLAB. Set the working path in MATLAB to the folder of the
example: <font face="Courier">...\MicrobeTracker...\examples\spotfinder2</font>.</p>

<p>2. Load the <font face="Courier">cb15nparbpopz.mat</font> file by dragging-
and-dropping it into the MATLAB's workspace.</p>

<p>If you with, you can obtain this file yourself. For this, start
<a href="helpMicrobeTracker.htm">MicrobeTracker</a>. Load the
default parameter set <font face="Courier">alg4.set</font>. Load the phase
contrast image by checking the <b>Stack</b> checkbox, then clicking on the
<b>Load phase</b> button and selecting the
<font face="Courier">...\cb15nparbpopz\phase.tif</font> file. Click the <b>All
frames</b> to do detection. Save the resulting file on the disk. Close
MicrobeTracker and start <a href="helpSpotFinder.htm">SpotFinderZ</a>. Run
<b>Adjust</b> regime, load the <font face="Courier">...\cb15nparbpopz\cfp.tif</font>
file and go through several cells selecting the right spots,
then click <b>Stop</b>. Select checkboxes <b>Meshes</b> and <b>File</b>, then
click <b>Run</b> selecting the input and output file. Repeat the same procedure
for the <font face="Courier">...\cb15nparbpopz\yfp.tif</font> with loading the
meshes file just generated by SpotFinderZ, except for changing the
<b>Field</b> value to "spots2" (this will create different fields for CFP anf
YFP spots). Save to the same file. Close SpotFinderZ and load the file into
MATLAB's workspace.</p>

<p>3. Load the images we will need using the
<a href="helploadimagestack.htm">loadimagestack</a> function.</p>

<p><font face="Courier" color=#0000AA>&nbsp;&nbsp;&nbsp;cfp=loadimagestack('cb15parbpopz\cfp.tif');<br>
&nbsp;&nbsp;&nbsp;yfp=loadimagestack('cb15parbpopz\yfp.tif');</font></p>

<p>4. Now run the dispcellall function with the default parameters to display
the CFP spots overlaying the corresponding image:</p>

<p><font face="Courier" color=#0000AA>&nbsp;&nbsp;&nbsp;dispcellall(cellList,cfp)</font></p>

<center><a href="example_spotfinder2_7.gif" target="_blank">
<img src="example_spotfinder2_7.gif" width="316" border="0" alt="CFP-ParB spots" />
</a></center>

<p>5. To display the YFP spots change the field to display from the default "spots"
to "spots2":</p>

<p><font face="Courier" color=#0000AA>&nbsp;&nbsp;&nbsp;dispcellall(cellList,yfp,'spots2')</font></p>

<center><a href="example_spotfinder2_8.gif" target="_blank">
<img src="example_spotfinder2_8.gif" width="316" border="0" alt="YFP-PopZ spots" />
</a></center>

<p>6. Now display the two types of spots together without any background image:</p>

<p><font face="Courier" color=#0000AA>&nbsp;&nbsp;&nbsp;dispcellall(cellList,[],'spots','spots2')</font></p>

<center><a href="example_spotfinder2_9.gif" target="_blank">
<img src="example_spotfinder2_9.gif" width="316" border="0" alt="YFP-PopZ spots" />
</a></center>

<p>7. Now display the two types of spots together, but using filled circles
instead of dots. This regime is useful to see overlapping spots. Let's also
change the radius of the spots from the default of 1.5 pixels to 2.5 pixels.
Zoom the image after plotting to see the details better:</p>

<p><font face="Courier" color=#0000AA>&nbsp;&nbsp;&nbsp;dispcellall(cellList,[],'spots','spots2','disk','markersize',2.5)</font></p>

<center><a href="example_spotfinder2_10.gif" target="_blank">
<img src="example_spotfinder2_10.gif" width="316" border="0" alt="YFP-PopZ spots" />
</a></center>

<p>8. The way disks are displayed can be modified by the user by directly
supplying their colors. The color table is an <i>n</i>-by-3 or <i>n</i>+1-by-3
matrix, where <i>n</i> if the number of fields (two in our case - "spots" and
"spots2"). Each row corresponds to the color of the field, in the RGB (red,
green, blue) format e.g. for magenta and blue colors the matrix is:</p>

<p><font face="Courier">&nbsp;&nbsp;&nbsp;[1 0 1; 0 0 1]</font></p>

<p>The optional last row correspond to the merge color if two or more different
spots overlap. Let's display the spots with yellow and blue colors without
merge:</p>

<p><font face="Courier" color=#0000AA>&nbsp;&nbsp;&nbsp;dispcellall(cellList,[],'spots','spots2','disk','markersize',2.5,'colortable',[1 1 0;0 0 1])</font></p>

<center><a href="example_spotfinder2_11.gif" target="_blank">
<img src="example_spotfinder2_11.gif" width="316" border="0" alt="YFP-PopZ spots" />
</a></center>

<!-- Start replacement block 3 -->
<br>
<p>Top pages: <b> <a href="helpTools.htm">
MicrobeTracker Tools</a>, <a href="../help.htm">
MicrobeTracker Suite</a>.</b></p>
<!-- End replacement block 3 -->
</body>
</html>